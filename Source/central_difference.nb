(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     33350,        715]
NotebookOptionsPosition[     32489,        684]
NotebookOutlinePosition[     32829,        699]
CellTagsIndexPosition[     32786,        696]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Manually integrate Schrodinger\[CloseCurlyQuote]s equation", \
"Subsection",
 CellChangeTimes->{{3.735940871791806*^9, 3.735940926253685*^9}},
 ExpressionUUID -> "f0677f16-2870-4a13-ba71-65af765b2ec5"],

Cell["\<\
The grid of x points in the region of the support of the potential\
\>", "Text",
 CellChangeTimes->{{3.735940939571072*^9, 3.735940950792429*^9}},
 ExpressionUUID -> "0748bcd6-947c-4432-bdf3-3fb5dcf3b7d9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xgrid", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "n", ",", "m", ",", " ", "step", ",", "xs"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"p", "[", "\"\<a\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"p", "[", "\"\<b\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"p", "[", "\"\<n\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"p", "[", "\"\<m\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "/", 
       RowBox[{"(", "n", ")"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"xs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "a", ",", "b", ",", "step"}], "}"}]}], "]"}], "//",
        "N"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "xs", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.735852946655422*^9, 3.7358531285386763`*^9}, 
   3.735853401804706*^9, 3.735854748674193*^9, {3.735857277757272*^9, 
   3.735857279899592*^9}, 3.73585735202209*^9, {3.735857467749865*^9, 
   3.735857491087822*^9}, {3.735857841664803*^9, 3.735857856264642*^9}, {
   3.7358578883216333`*^9, 3.7358579128482428`*^9}, {3.7358589123397303`*^9, 
   3.735858913525894*^9}},
 ExpressionUUID -> "374288c8-ddb5-4053-a86a-36a6180cbc9e"],

Cell["\<\
The grid of x points in the entire region including some to the left of the \
support of the potential for determining the value of T.\
\>", "Text",
 CellChangeTimes->{{3.735940958628315*^9, 3.735940994604867*^9}},
 ExpressionUUID -> "0eec268c-caf7-48f8-865b-c8dfa7b208ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xgridFull", "[", "p_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "n", ",", "m", ",", " ", "step", ",", "xs"}],
      "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"p", "[", "\"\<a\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"p", "[", "\"\<b\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"p", "[", "\"\<n\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"p", "[", "\"\<m\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"step", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "/", 
       RowBox[{"(", "n", ")"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"xs", " ", "=", " ", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{"x", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"a", "-", 
            RowBox[{"m", "*", "step"}]}], ",", "b", ",", "step"}], "}"}]}], 
        "]"}], "//", "N"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "xs", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 ExpressionUUID -> "82f16dc0-647d-4f83-b9df-8c83788b14a9"],

Cell["The H-matrix which for the linear system to determine psi(x)", "Text",
 CellChangeTimes->{{3.7359410038427258`*^9, 3.735941032418254*^9}},
 ExpressionUUID -> "1f724ba1-26d9-45dd-81e7-8e3c1c720d9b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Hmat", "[", 
    RowBox[{"V_", ",", " ", "k_", ",", " ", "p_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xg", ",", " ", "a", ",", "b", ",", "n", ",", "m", ",", " ", "step", 
       ",", "xs", ",", " ", "diag", ",", " ", "u1", ",", " ", "u2", ",", " ", 
       "mat", ",", " ", "u1V", ",", " ", "matV"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xg", "=", 
       RowBox[{"xgrid", "[", "p", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"p", "[", "\"\<a\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", "=", 
       RowBox[{"p", "[", "\"\<b\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", "=", 
       RowBox[{"p", "[", "\"\<n\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"m", "=", 
       RowBox[{"p", "[", "\"\<m\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"step", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Some", " ", "of", " ", "these", " ", "elements", " ", "are", " ", 
        "constant", " ", "and", " ", "should", " ", "not", " ", "be", " ", 
        "recreated", " ", "for", " ", "every", " ", "solution"}], " ", "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"diag", " ", "=", " ", 
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "]"}], "\[Rule]", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u1", " ", "=", " ", 
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{
            RowBox[{"step", "^", "2"}], "*", 
            RowBox[{"k", "^", "2"}]}]}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"u2", "=", 
       RowBox[{
        RowBox[{"Band", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], "]"}], "\[Rule]", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mat", " ", "=", " ", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"diag", ",", "u1", ",", "u2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "+", "n", "+", "m"}], ",", " ", 
           RowBox[{"1", "+", "n", "+", "m"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "These", " ", "elements", " ", "are", " ", "constant", " ", "for", " ",
         "every", " ", "value", " ", "of", " ", "k", " ", "and", " ", 
        "should", " ", "only", " ", "be", " ", "generated", " ", "once", " ", 
        "per", " ", "k", " ", "value"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"u1V", "=", 
         RowBox[{
          RowBox[{"Band", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}], "]"}], "\[Rule]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "*", 
            RowBox[{"step", "^", "2"}], "*", 
            RowBox[{"V", "[", "xg", "]"}]}], ")"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"matV", " ", "=", " ", 
         RowBox[{"SparseArray", "[", 
          RowBox[{"u1V", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "+", "n", "+", "m"}], ",", 
             RowBox[{"1", "+", "n", "+", "m"}]}], "}"}]}], "]"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "mat", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7358532459154663`*^9, 3.73585345637707*^9}, {
   3.735853496334951*^9, 3.7358536117775803`*^9}, {3.735853654554099*^9, 
   3.7358536852747297`*^9}, {3.7358539558834133`*^9, 3.735854041508065*^9}, {
   3.735854136909254*^9, 3.7358541494081793`*^9}, {3.735854200800723*^9, 
   3.735854205504201*^9}, {3.735854287118528*^9, 3.735854288392107*^9}, {
   3.735854352922308*^9, 3.735854416930747*^9}, {3.735854452176103*^9, 
   3.735854700809498*^9}, {3.73585478522443*^9, 3.735854790553067*^9}, {
   3.735854873326687*^9, 3.73585489981418*^9}, {3.735854937087482*^9, 
   3.7358549443413563`*^9}, {3.735857291841391*^9, 3.735857307441826*^9}, {
   3.7358573738494587`*^9, 3.735857374294835*^9}, {3.7358574863386993`*^9, 
   3.7358574875842323`*^9}, {3.735857601713756*^9, 3.735857615738867*^9}, {
   3.735941113508573*^9, 3.735941176184413*^9}, 3.736223085132749*^9, {
   3.736223135568121*^9, 3.7362231496243343`*^9}, {3.736223195590716*^9, 
   3.736223250998547*^9}, {3.736223319135771*^9, 3.7362233887461433`*^9}, {
   3.7362234235231113`*^9, 3.736223427242359*^9}, {3.7362235552286386`*^9, 
   3.7362235639709272`*^9}, {3.7362236078700438`*^9, 3.73622361933523*^9}, {
   3.7362237671787148`*^9, 3.736223768905018*^9}, {3.73622464324471*^9, 
   3.7362246575026197`*^9}, {3.736224855482074*^9, 3.736224870098124*^9}, {
   3.73622500155237*^9, 3.736225001795528*^9}, {3.7362255676377573`*^9, 
   3.7362256207828493`*^9}, {3.736226811187354*^9, 3.736226819818956*^9}, {
   3.736228249419935*^9, 3.736228249476087*^9}, 3.736228478527383*^9, {
   3.736228626872963*^9, 3.7362286322165747`*^9}, {3.736228756603322*^9, 
   3.736228814251534*^9}, {3.7362293123605757`*^9, 3.736229313482917*^9}, {
   3.736232791241639*^9, 3.7362328077504473`*^9}},
 ExpressionUUID -> "3e9635ef-9594-4a64-967c-8c9e99761bea"],

Cell["The inhomogenous term for the linear system.", "Text",
 CellChangeTimes->{{3.735941046077301*^9, 3.735941064953621*^9}},
 ExpressionUUID -> "56fd28e7-46e4-424d-8a79-b97db09686de"],

Cell[BoxData[
 RowBox[{
  RowBox[{"yvec", "[", 
   RowBox[{"k_", ",", "p_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "n", ",", "m", ",", " ", "step", ",", "y"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"p", "[", "\"\<a\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"b", "=", 
      RowBox[{"p", "[", "\"\<b\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"n", "=", 
      RowBox[{"p", "[", "\"\<n\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"m", "=", 
      RowBox[{"p", "[", "\"\<m\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"step", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}], "/", "n"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"y", " ", "=", 
      RowBox[{"SparseArray", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"n", "+", "m", "+", "1"}], "\[Rule]", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Exp", "[", 
              RowBox[{"I", " ", 
               RowBox[{"Sqrt", "[", "2", "]"}], "k", " ", "step"}], "]"}]}], 
            "+", 
            RowBox[{"2", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{
                RowBox[{"step", "^", "2"}], " ", 
                RowBox[{"k", "^", "2"}]}]}], ")"}]}]}]}], ",", 
          RowBox[{
           RowBox[{"n", "+", "m"}], "\[Rule]", 
           RowBox[{"-", "1"}]}]}], "}"}], ",", " ", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"n", "+", "m", "+", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "y", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.735855042164646*^9, 3.735855070186934*^9}, {
   3.735855113532824*^9, 3.735855295833371*^9}, 3.735857208725074*^9, {
   3.735858511068404*^9, 3.735858535225065*^9}, {3.735859889106963*^9, 
   3.735859889893659*^9}, {3.735860153153905*^9, 3.735860181308906*^9}, 
   3.735860751582017*^9, {3.736223848077766*^9, 3.736223867000202*^9}, {
   3.736224744093205*^9, 3.736224832297779*^9}, {3.7362250124906607`*^9, 
   3.736225028890457*^9}, {3.7362256375811653`*^9, 3.736225651196859*^9}, {
   3.736226567020224*^9, 3.736226573435834*^9}, {3.7362266199400997`*^9, 
   3.736226621140667*^9}, {3.736226680648012*^9, 3.7362266944541187`*^9}, {
   3.736228952476623*^9, 3.736229002420835*^9}},
 ExpressionUUID -> "dfb5f0ba-4993-4a9a-b988-6bceb975ca2a"],

Cell["Solve the linear system.", "Text",
 CellChangeTimes->{{3.735941103472941*^9, 3.7359411067201014`*^9}},
 ExpressionUUID -> "d050a0f1-5a4f-452f-9f49-93f23f77850e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"psiSoln", "[", 
   RowBox[{"V_", ",", "k_", ",", "p_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"LinearSolve", "[", 
   RowBox[{
    RowBox[{"Hmat", "[", 
     RowBox[{"V", ",", "k", ",", "p"}], "]"}], ",", 
    RowBox[{"yvec", "[", 
     RowBox[{"k", ",", "p"}], "]"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Banded\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7358553274249277`*^9, 3.735855330627524*^9}, {
  3.735855370585495*^9, 3.735855445258314*^9}, {3.735855729881295*^9, 
  3.735855742016158*^9}, {3.735855784470829*^9, 3.735855785551668*^9}, {
  3.735860550137904*^9, 3.735860551114196*^9}, {3.735860590847609*^9, 
  3.7358606042580357`*^9}},
 ExpressionUUID -> "0c81bab2-bea9-4327-8b57-cf97ce23591a"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"V", "[", "x_", "]"}], ":=", 
     RowBox[{"1", "/", 
      RowBox[{
       RowBox[{"Cosh", "[", "x", "]"}], "^", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"params", " ", "=", " ", 
     RowBox[{"Association", "[", 
      RowBox[{
       RowBox[{"\"\<a\>\"", "\[Rule]", 
        RowBox[{"-", "5"}]}], ",", " ", 
       RowBox[{"\"\<b\>\"", "\[Rule]", "5"}], ",", 
       RowBox[{"\"\<n\>\"", "\[Rule]", "1000"}], ",", 
       RowBox[{"\"\<m\>\"", "\[Rule]", "200"}]}], "]"}]}], ";"}]}]}]], "Input",\

 CellChangeTimes->{{3.736222866271593*^9, 3.736222866398699*^9}, {
  3.736222956496111*^9, 3.736222959015867*^9}, {3.7362234725533333`*^9, 
  3.736223475872575*^9}, {3.7362235816369867`*^9, 3.7362235823627167`*^9}, {
  3.7362238218478813`*^9, 3.7362238219611483`*^9}, {3.736223900304207*^9, 
  3.736223914600806*^9}, {3.7362267588308268`*^9, 3.736226761087968*^9}, {
  3.736228824072978*^9, 3.736228844705862*^9}, {3.73622901277456*^9, 
  3.736229018605489*^9}, {3.736229051557364*^9, 3.7362290515801888`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"psiTest", " ", "=", " ", 
     RowBox[{"psiSoln", "[", 
      RowBox[{"V", ",", "1.", ",", "params"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xGridFullTest", " ", "=", " ", 
     RowBox[{"xgridFull", "[", "params", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"psiTestofX", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xGridFullTest", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"Re", "[", 
          RowBox[{"psiTest", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "psiTest", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.736223984257303*^9, 3.736223993730555*^9}, {
  3.736225660285684*^9, 3.7362256818358307`*^9}, {3.736226656092781*^9, 
  3.736226662651637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Interpolation", "[", "psiTestofX", "]"}], "[", "x", "]"}], 
      "-", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"Sqrt", "[", "2", "]"}], 
        RowBox[{"(", 
         RowBox[{"x", "-", "5", "-", 
          RowBox[{"10", "/", "1000"}]}], ")"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.736233122645746*^9, 3.736233195057235*^9}, {
  3.736237693459366*^9, 3.736237694051525*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
hO+nqmHAzLy141pXEf///wjYo9WJK4j/Af/rfks=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {-0.00011806778910850718`, 0.00009212478125274204}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7362331320672827`*^9, 3.736233141772285*^9}, {
   3.736233179662306*^9, 3.736233196598796*^9}, 3.736237695667924*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1460, 759},
WindowMargins->{{Automatic, 118}, {82, Automatic}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (September 9, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 207, 3, 45, "Subsection"],
Cell[790, 27, 215, 4, 33, "Text"],
Cell[1008, 33, 1689, 38, 286, "Input"],
Cell[2700, 73, 283, 5, 33, "Text"],
Cell[2986, 80, 1379, 35, 286, "Input"],
Cell[4368, 117, 203, 2, 33, "Text"],
Cell[4574, 121, 5749, 123, 473, "Input"],
Cell[10326, 246, 185, 2, 33, "Text"],
Cell[10514, 250, 2688, 61, 319, "Input"],
Cell[13205, 313, 167, 2, 33, "Text"],
Cell[13375, 317, 764, 16, 55, "Input"],
Cell[14142, 335, 1135, 26, 77, "Input"],
Cell[15280, 363, 1033, 29, 99, "Input"],
Cell[CellGroupData[{
Cell[16338, 396, 657, 19, 55, "Input"],
Cell[16998, 417, 15463, 263, 274, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
